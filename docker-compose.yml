version: '3'
services:

  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: django_db
      MYSQL_USER: django_user
      MYSQL_PASSWORD: django_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - django_network

  web:
    build: .
    command: gunicorn core.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - .:/code/
      - static_volume:/code/static
    ports:
      - "8000:8000"
    environment:
      - DATABASE_HOST=mysql_db
      - DATABASE_NAME=django_db
      - DATABASE_USER=django_user
      - DATABASE_PASSWORD=django_password
    depends_on:
      - db
      - rabbitmq
    networks:
      - django_network

  rabbitmq:
    restart: always
    image: rabbitmq:3.13.7-management
    ports:
      - "5672:5672"
      - "15672:15672"
    expose:
      - "5672"
    environment:
      - RABBITMQ_DEFAULT_VHOST=/
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - django_network
  celery:
    build: .
    command: celery -A core worker --loglevel=info
    volumes:
      - .:/code
    depends_on:
      - rabbitmq
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    networks:
      - django_network

  celery_beat:
    build: .
    command: celery -A core beat --loglevel=info
    volumes:
      - .:/code
    depends_on:
      - rabbitmq
    networks:
      - django_network

volumes:
  mysql_data:
  static_volume:

networks:
  django_network:
    driver: bridge